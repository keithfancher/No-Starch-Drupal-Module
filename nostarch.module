<?php
// $Id$


/*
 * Doesn't do jack, I guess
 */
function nostarch_help($path, $arg) {
  switch ($path) {
    case "admin/help#nostarch":
      $output = '<p>'. t("No Starch Press custom module -- does custom No Starch stuff.  You don't need any help with this.  Seriously.  Get out.") .'</p>';
      return $output;
  }
}


/*
 * Override crappy uc_product CSS stuff
 */
function nostarch_init() {
  drupal_add_css(drupal_get_path('module', 'nostarch') .'/nostarch.css');
}


/*
 * hook_link() -- use to ADD links to nodes
 */
function nostarch_link($type, $object, $teaser = FALSE) {

  // show number of comments under blog post
  if ($type == 'node' && $object->type == 'blog') {
    $node = $object; // just to make things less confusing...

    $all = comment_num_all($node->nid);
    if ($all) {
      $links['blog_comments'] = array(
        'title' => format_plural($all, '1 comment', '@count comments'), 
        'href' => "node/$node->nid", 
        'attributes' => array('title' => t('Jump to the first comment of this posting.')), 
        'fragment' => 'comments',
      );
    }
  }

  return $links;
}


/*
 * hook_link_alter() -- use to REMOVE/MODIFY links from nodes
 */
function nostarch_link_alter(&$links, $node) {

  // remove "user's blog" links in blog posts (because they suck and are ugly)
  if ($node->type == 'blog') {
    unset($links['blog_usernames_blog']);
  }
}


/*
 * Implementation of hook_form_alter()
 */
function nostarch_form_alter(&$form, &$form_state, $form_id) {
  $node = $form['node']['#value'];

  // change "add to cart" to "pre-order" for books in taxonomy category 18
  if(strcmp(substr($form_id, 0, 28), 'uc_product_add_to_cart_form_') == 0) {
    if(isset($node->taxonomy[18])) {
      $form['submit']['#value'] = '  Pre-Order  ';
    }
  }
}


/*
 * Implemenation of hook_order_operations()
 *
 * This defines the functions that can be called from various views, including 
 * the "order management" page. Makes processing orders way easier. Actual 
 * implementation of these functions below.
 */
function nostarch_order_operations() {
  return array(
    'add_ebooks' => array(
      'label' => t("Add ebooks to users' accounts"),
      'callback' => 'nostarch_orders_add_ebooks',
      'disabled' => TRUE,
    ),
    'export_address_csv' => array(
      'label' => t("Export addresses as a CSV file"),
      'callback' => 'nostarch_orders_export_addresses_csv',
      'disabled' => TRUE,
    ),
    'export_orders_csv' => array(
      'label' => t("Export orders as a CSV file"),
      'callback' => 'nostarch_orders_export_orders_csv',
      'disabled' => TRUE,
    ),
  );    
}


// TODO
function nostarch_orders_add_ebooks($order_ids) {
  foreach ($order_ids as $order_id) {
    $order = uc_order_load($order_id);

    drupal_set_message(t('Hey I guess this worked?'));
  }
}


/*
 *  Output order ID and shipping addresses for selected orders. Particularly 
 *  useful for making mailing labels when dealing with large amounts of orders.
 *
 *  TODO: This suffers from the same security issues as the export_orders_csv() 
 *  function, unfortunately.
 */
function nostarch_orders_export_addresses_csv($order_ids) {

  // open the file, give unique name w/ timestamp
  $fileName = "sites/default/files/bulk_ops_output/addresses-" . time() . ".csv";
  $fh = fopen($fileName, 'w') or die("oh junk guys, can't open the file");

  // write headings... used by ShipRush to make life easier
  $heading = "OrderID;ShippingCompany;ShippingContact;ShippingAddress1;ShippingAddress2;ShippingCity;ShippingState;ShippingCountry;ShippingPostalCode;TotalAmount;TotalWeight;Reference;TrackingNumber\n";
  fwrite($fh, $heading);

  foreach ($order_ids as $order_id) {
    $order = uc_order_load($order_id);

    // uncomment when debugging
//    $results = print_r($order, true);
//    drupal_set_message($results);

    $company = $order->delivery_company;
    $name = $order->delivery_first_name . " " . $order->delivery_last_name;
    $address1 = $order->delivery_street1;
    $address2 = $order->delivery_street2;
    $city = $order->delivery_city;
    $state = uc_get_zone_code($order->delivery_zone); // states/provinces are stored by numeric code
    $postal_code = $order->delivery_postal_code;

    // getting the country is a bit more complex...
    $country_data = uc_get_country_data(array('country_id' => $order->delivery_country));
    $country = $country_data[0]['country_name'];

    // get shipping amt
    foreach ($order->line_items as $item) {
      $ship_ret = stripos($item['title'], "usps");
      if($ship_ret !== false) { // there is shipping!
        $shipping = $item['amount'];
      }
    }

    // output semicolon delimited, csv-style
    $outputString = $order_id . ";" . $company . ";" . $name . ";" . 
                    $address1 . ";" . $address2 . ";" . $city . ";" .
                    $state . ";" . $country . ";" . $postal_code . ";" . 
                    $shipping . ";" . "" . ";" . "Paperback book\n";


    // these are the old token values, not used anymore and not very useful
//    $outputString = $values['order-id'] . ";" . $values['order-shipping-address'] . "\n";
//    $outputString = str_replace("<BR />", ";", $outputString); // kill <BR />
//    $outputString = str_replace(" N/A ", " ", $outputString);  // kill N/A
//    $outputString = str_replace("&#039;", "'", $outputString); // replace shitty html w/ real apostrophe
  
    // write one line
    fwrite($fh, $outputString);
  }

  // close the file
  fclose($fh);
  
  // download link
  $message = 'If all went well, you should be able to download the csv <a href="' . '/' . $fileName . '">here</a>.';
  drupal_set_message($message);
}


/*
 * Output some useful bullshit: order id, subtotal, coupon value, tax, total, 
 * &c.
 *
 * This spits out a CSV in sites/default/files/bulk_ops_output and exposes a 
 * download link to it when finished. Note that this file IS publically 
 * visible (assuming you know where to look), and these should be deleted as 
 * soon as they're retrieved.
 *
 * TODO: Deliver the file in a more secure way!
 */
function nostarch_orders_export_orders_csv($order_ids) {

  // open the file, give unique name w/ timestamp
  $fileName = "sites/default/files/bulk_ops_output/orders-" . time() . ".csv";
  $fh = fopen($fileName, 'w') or die("oh junk guys, can't open the file");

  // label the CSV columns
  $col_labels = "ORDER NUM;SUBTOTAL;COUPON AMT;TAX;SHIPPING;ORDER TOTAL\n";
  fwrite($fh, $col_labels);

  // loop through each order
  foreach ($order_ids as $order_id) {
    $order = uc_order_load($order_id);

    // populate the ubercart token values
    $values = uc_order_token_values('order', $order);

    // used then stripped... stupid
    $context = array( 'location' => 'order-invoice-line-item',
                      'subject' => array(
                      'order' => $order,
                      ),
                    );

    // set default values for tax, shipping, and coupons... if the line items 
    // exist, these values will be overwritten
    $tax = '$0.00';
    $shipping = '$0.00';
    $coupon = '$0.00';

    foreach ($order->line_items as $item) {

      // test for tax
      $tax_ret = stripos($item['title'], "tax");
      if($tax_ret !== false) { // there is tax!
        $tax = strip_tags(uc_price($item['amount'], $context));
      }
        
      // test for shipping
      $ship_ret = stripos($item['title'], "usps");
      if($ship_ret !== false) { // there is shipping!
        $shipping = strip_tags(uc_price($item['amount'], $context));
      }

      // test for coupon
      $coup_ret = stripos($item['title'], "coupon");
      if($coup_ret !== false) { // there is coupon!
        $coupon = strip_tags(uc_price($item['amount'], $context));
      }
    }

    // output semicolon delimited, csv-style
    // ie: order id;subtotal;coupon;tax;shipping;order total
    $outputString = $values['order-id'] . ";" . $values['order-subtotal'] . ";" . $coupon . ";" . $tax . ";" . $shipping . ";" . $values['order-total'] . "\n";

    // write one line (order) to the output file
    fwrite($fh, $outputString);
  }

  // close the file
  fclose($fh);
  
  // download link
  $message = 'If all went well, you should be able to download the csv <a href="' . '/' . $fileName . '">here</a>.';
  drupal_set_message($message);
}



/*
 * Implementation of hook_line_item_alter()
 *
 * Use this to actually charge the correct amount of tax, regardless of an 
 * item's shippability or discounted status
 */
// I guess this doesn't work because the JS is altering it after the page has loaded?
/*function nostarch_line_item_alter(&$item, $order) {
  if (is_array($item) && $item['type'] == 'tax') {
    $item['amount'] = 50;  // just trying to change it to anything...
  }
}
 */


/*
 * Override this so "completed" orders don't show up in the "active orders" view
 * hook_order_state()
 */
/* not really necessary... commenting it out for now
function nostarch_order_state() {
  $states[] = array(
    'id' => 'canceled',
    'title' => t('Canceled'),
    'weight' => -20,
    'scope' => 'specific',
                    );
  $states[] = array(
    'id' => 'in_checkout',
    'title' => t('In checkout'),
    'weight' => -10,
    'scope' => 'specific',
                      );
  $states[] = array(
    'id' => 'post_checkout',
    'title' => t('Post checkout'),
    'weight' => 0,
    'scope' => 'general',
                      );
  $states[] = array(
    'id' => 'completed',
    'title' => t('Completed'),
    'weight' => 20,
    'scope' => 'specific',
  );

  return $states;
}
*/
